type Query {
    commentsForPost(postId: ID!, page: Int, size: Int): [CommentDTO!]!
    comment(id: ID!): CommentDTO
    reactionSummary(commentId: ID!): ReactionSummaryDTO!
}

type Mutation {
    createComment(input: CommentCreateInput!): CommentDTO
    updateComment(id: ID!, content: String!): CommentDTO
    deleteComment(id: ID!): Boolean
    toggleReaction(commentId: ID!, reactionType: String!): ReactionSummaryDTO
}

type CommentDTO {
    id: ID!
    postId: ID!
    authorId: String
    content: String
    createdAt: String
    updatedAt: String
    parentId: ID
    replies: [CommentDTO!]
}

type ReactionSummaryDTO {
    likeCount: Long
    laughCount: Long
    sadCount: Long
    insightfulCount: Long
}

input CommentCreateInput {
    postId: ID!
    parentId: ID
    content: String!
}
